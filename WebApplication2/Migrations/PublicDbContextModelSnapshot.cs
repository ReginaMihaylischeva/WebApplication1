// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestsTesk.Context;

namespace WebApplication2.Migrations
{
    [DbContext(typeof(PublicDbContext))]
    partial class PublicDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TestsTesk.Context.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CourseId");

                    b.HasIndex("GroupId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("TestsTesk.Context.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("OrganisationsOrganisationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EmployeeId");

                    b.HasIndex("GroupId");

                    b.HasIndex("OrganisationsOrganisationId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("TestsTesk.Context.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TeachersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GroupId");

                    b.HasIndex("TeachersId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("TestsTesk.Context.Organisation", b =>
                {
                    b.Property<int>("OrganisationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("INN")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrganisationId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Organisations");
                });

            modelBuilder.Entity("TestsTesk.Context.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("TestsTesk.Context.Course", b =>
                {
                    b.HasOne("TestsTesk.Context.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("TestsTesk.Context.Employee", b =>
                {
                    b.HasOne("TestsTesk.Context.Group", null)
                        .WithMany("Employes")
                        .HasForeignKey("GroupId");

                    b.HasOne("TestsTesk.Context.Organisation", "Organisations")
                        .WithMany()
                        .HasForeignKey("OrganisationsOrganisationId");

                    b.Navigation("Organisations");
                });

            modelBuilder.Entity("TestsTesk.Context.Group", b =>
                {
                    b.HasOne("TestsTesk.Context.Teacher", "Teachers")
                        .WithMany()
                        .HasForeignKey("TeachersId");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("TestsTesk.Context.Organisation", b =>
                {
                    b.HasOne("TestsTesk.Context.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("TestsTesk.Context.Group", b =>
                {
                    b.Navigation("Employes");
                });
#pragma warning restore 612, 618
        }
    }
}
